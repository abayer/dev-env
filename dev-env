#!/bin/bash

PORTS="/tmp/.ports-$(head -c 4 /dev/urandom | xxd -p)-$(date +'%Y%m%d-%H%M%S')"
touch "$PORTS"
SCRIPT_HOME="$(dirname $BASH_SOURCE | sed 's:^\.$:'"$PWD"':g')"
[ ! -z "$CLOUD_SHELL" ] && ENV=cloud || ENV=mac
source ./env/env.sh $ENV

function setup_workspace(){
  if [[ ! -d $GO_WORKSPACE ]]
  then
    mkdir -p $GO_WORKSPACE
  fi
}

function setup_mount(){
  if [[ ! -d $MOUNT ]]
  then
    mkdir -p $MOUNT
  fi
}

function get_unused_port() {
  for port in $(seq 8000 9000);
  do
    if [ $(grep -c "$port" "$PORTS") -eq 0 ]
    then
      nc -zv 127.0.0.1 $port > /dev/null 2>&1
      [ $? -eq 1 ] \
        && echo $port >> "$PORTS"\
        && echo "$port" \
        && break;
    fi
  done
}

function setup_environment(){
  cp -r $SCRIPT_HOME/env/$ENV/. $MOUNT/
  curl -sL https://raw.githubusercontent.com/gpakosz/.tmux/master/.tmux.conf > $MOUNT/.tmux.conf
  if [[ -d ~/.kube ]]
  then
    kube="--volume $HOME/.kube:/home/developer/.kube"
  fi
}

function run(){
  PORT_8080=$(get_unused_port)
  PORT_8443=$(get_unused_port)
  rm "$PORTS"
  $SUDO docker run --name dev-env-$(head -c 4 /dev/urandom | xxd -p)-$(date +'%Y%m%d-%H%M%S') \
                   --rm \
                   --tty \
                   --env TERM=screen-256color-bce \
                   --env PORT_8080=$PORT_8080 \
                   --env PORT_8443=$PORT_8443 \
                   --interactive \
                   --publish $PORT_8080:8080 \
                   --publish $PORT_8443:8443 \
                   --volume /home/developer/.vim \
                   --volume /home/developer/go-workspace/bin \
                   --volume $WORKSPACE:/home/developer/workspace:rw \
                   --volume $GO_WORKSPACE:/home/developer/go-workspace:rw \
                   --volume $MOUNT:/home/developer \
                   --volume $SSH:/home/developer/.ssh:ro \
                   --volume $DOCKER_SOCKET:/var/run/docker.sock \
                   ${kube} \
                   gcr.io/jenkinsxio/dev-env:0.0.4 tmux -u
}

setup_workspace
setup_mount
setup_environment
run
